version: "3.7"
services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - parrotnet
    command: ["postgres", "-c", "log_statement=all" ]
  amqp:
    image: parrot-rabbitmq:${project.version}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - parrotnet
  tasks-service:
    image: tasks-service:${project.version}
    environment:
      - TEST_ENVIRONMENT
    depends_on:
      - amqp
      - postgres
    networks:
      - parrotnet
  auth-service:
    image: auth-service:${project.version}
    environment:
      - TEST_ENVIRONMENT
    depends_on:
      - amqp
      - postgres
    networks:
      - parrotnet
  accounting-service:
    image: accounting-service:${project.version}
    environment:
      - TEST_ENVIRONMENT
    depends_on:
      - amqp
      - postgres
    networks:
      - parrotnet
  analytics-service:
    image: analytics-service:${project.version}
    environment:
      - TEST_ENVIRONMENT
    depends_on:
      - amqp
      - postgres
    networks:
      - parrotnet
  webui:
    image: web-ui:${project.version}
    ports:
      - "80:80"
    depends_on:
      - accounting-service
      - analytics-service
      - auth-service
      - tasks-service
    networks:
      - parrotnet
volumes:
  rabbitmq_data:
  db_data:
networks:
  parrotnet: